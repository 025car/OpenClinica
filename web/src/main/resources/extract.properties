##############################################################
# OpenClinica extract properties file - Tom Hickerson Oct 07 2010

# copyright Akaza Research, 2010

# OpenClinica's Extract Data module natively produces CDISC ODM XML 
# datasets (ODM version 1.3 with OpenClinica Extensions). Multiple extract 
# formats can be configured by including XML stylesheets (XSLs) that 
# transform the data into different output formats. Output formats may be 
# a file that is also XML or another format like HTML, SQL, tab-delimited, etc. 
# Additionally, post-processing plug-ins are supported that can further transform
# or route the output.

# The main goals of this file:
# 1. Define xsl file locations, their descriptions, and the location/filename of
# their output
# 2. Define post-processing actions

# Currently supported postprocessing options: 
# -- SQL push to a DB
# -- generate a set of PDFs 
##############################################################

##############################################################
##############################################################
# Extract Formats
##############################################################
##############################################################

##############################################################
# 1. XSL File and Description
#
# ***NOTE*** The default location for these files is under 
# $exportFilePath/xslt.  If the file is not found there, the job will 
# not work.
# If the text is internationalized, it is prefaced with an & (and)
# symbol, and the text can be found in the notes.properties i18n files.
##############################################################
extract.number=99
extract.1.file=ODMReportStylesheet.xsl
extract.1.fileDescription=Default Stylesheet for SQL Datamart Generation
extract.1.linkText=Run Now
extract.1.helptext=Our first stylesheet, which is in SQL format for pushing information out to the datamart.

##############################################################
# 2. XSL file export locations
#
# This can be in the format of a relative directory.
# The location, exportName, success, and failure parameters can use variable names. Allowed variables are:
#    $datasetId  the id of the dataset definition in the OpenClinica database
#    $datasetName  the name of the dataset, with space characters replaced by underscores
#    $date  the system date, in YYYYMMDD format
#    $dateTime  the system datetime, in YYYYMMDDHHMMSS format
#    $exportFilePath  the standard location for file output, equal to $filePath/datasets/transformations, based on $filePath set in datainfo.properties
#    
# Note: variables may be specified in the standard format, e.g. $date or with curly braces, e.g. ${date} 
# Note: If you use the $dateTime variable in your file name and/or location, a new file will be generated each time the extract is run.
#          If you use an static file name, the file name will be the same each time and will overwrite the prior version of the file.

##############################################################
 
extract.1.location=$exportFilePath\\$datasetId

##############################################################
# 3. XSL file name templates
#
# File names for the export files.  This can be appended with 
# a date ($date) or date-time ($datetime).
# (This last one is important for files with multiple post
# processing actions.)
# Suffixes ARE NOT generated automatically (.sql, .pdf, etc)
##############################################################

extract.1.exportname=sql_export_$date.sql

##############################################################
# 4. Postprocessing Options
#
# Currently there are two codes, linked to the files listed above:
# sql = push to a db
# pdf = pdf generation
# Each XSL file can currently have one postprocessing option.
##############################################################

extract.1.post=sql
# optional tag below, database properties
# if this is commented out, OpenClinica's default setting from datainfo.properties
# will be used instead
extract.1.post.sql=db1
extract.1.zip=true
extract.1.deleteOld=true
#$linkURL  the URL for direct download of the output file. May only be used in the success parameter.
extract.1.success=The extract completed successfully. The file $linkURL is available for down load.
extract.1.failure=The extract did not complete due to errors. Please contact your system administrator for details.



extract.2.file=ODMtoTAB.xsl
extract.2.fileDescription= Tab-delimited
extract.2.linkText=Click here
extract.2.helptext=The tab-delimited output.
extract.2.location=$exportFilePath\\xsl2
extract.2.exportname=tab_$datetime.tab
extract.2.zip=true
extract.2.success=The extract completed successfully. The file $linkURL is available for down load.
extract.2.failure=The extract did not complete due to errors. Please contact your system administrator for details.





extract.3.file=odm_to_html.xsl
extract.3.fileDescription= &html_output
extract.3.linkText= &html_output_link
extract.3.helptext= &html_helptext
extract.3.location=$exportFilePath\\xsl3
extract.3.exportname=file_$date.html
extract.3.zip=false
extract.3.success=The extract completed successfully. The file $linkURL is available for down load.
extract.3.failure=The extract did not complete due to errors. Please contact your system administrator for details.

extract.4.file=odm_to_xslfo.xsl
extract.4.fileDescription=&pdf_output
extract.4.linkText= &pdf_output_link
extract.4.helptext= &pdf_helptext
extract.4.location=$exportFilePath\\xslpdf
extract.4.exportname=file_$date.fo
extract.4.post=pdf1
extract.4.zip=true
extract.4.success=The extract completed successfully. The file $linkURL is available for down load.
extract.4.failure=The extract did not complete due to errors. Please contact your system administrator for details.

extract.5.file=ODMtoTAB.xsl
extract.5.fileDescription= Microsoft Excel format
extract.5.linkText=Click here
extract.5.helptext=The tab-delimited output, which can be used in Excel spreadsheets.
extract.5.location=$exportFilePath\\xsl2
extract.5.exportname=tab_$datetime.xls
extract.5.zip=true
extract.5.success=The extract completed successfully. The file $linkURL is available for down load.
extract.5.failure=The extract did not complete due to errors. Please contact your system administrator for details.

##############################################################
##############################################################
##############################################################
# Postprocessing Options
#
# Currently there are two supported postprocessing methods:
# sql = push to a db using JDBC
# pdf = pdf generation
##############################################################

# You can define multiple postprocessors. Each postprocessor should be 
# specified in the form: 
# [[uniquePostprocessorName]].postProcessor =sql or pdf
# [[uniquePostprocessorName]].[[additionalProperties]] =

# Each extract format can currently have one postprocessing option, which should refer to the uniquePostprocessorName
# Example extract.1.post=db1


# postprocessor method
# a value is required for this field

##############################################################
##############################################################

##############################################################
#  SQL Postprocessor Configurations 
#
# Enter these properties if you require the datamart to be placed 
# in a different database, not in the OpenClinica database.
# Leaving the properties blank implies that the datamart will
# be placed in the OpenClinica, though each dataset will be in its own schema.
# 
# You may create more than one SQL database connection, use db1, db2, etc
##############################################################

db1.username=clinica
db1.password=clinica
db1.url=jdbc:postgresql://localhost:5432/OC_EXtract
db1.dataBase=postgres

##############################################################
#  Apache FO (PDF) Postprocessor Configurations 
#
##############################################################

# there are currently no configuration options for PDF generation
pdf1.postProcessor=pdf
pdf1.location=$exportFilePath\\extract2
pdf1.exportName=file_$date.xml
pdf1.deleteOld=true
pdf1.zip=true
