<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.1.xsd
                           http://www.springframework.org/schema/security/oauth2 
                           http://www.springframework.org/schema/security/spring-security-oauth2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.3.xsd">


    <context:annotation-config />
    <context:component-scan base-package="org.akaza.openclinica" />
    <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled">
        <!--<security:expression-handler ref="methodExpressionHandler"/>-->
    </security:global-method-security>

    <bean id="stormpathClient" class="com.stormpath.spring.security.client.ClientFactory" >
        <!-- # Replace this value with the file location from #2 above -->
        <property name="apiKeyFileLocation" value="/home/yogi/.stormpath/apiKey.properties" />
        <!-- If you've configured a Spring CacheManager (recommended to reduce network calls) -->
        <!--<property name="cacheManager" ref="cacheManager" />-->
    </bean>

    <!-- Configure Spring Security with the Stormpath `AuthenticationProvider` -->
    <bean id="authenticationProvider" class="com.stormpath.spring.security.provider.StormpathAuthenticationProvider">
        <property name="client" ref="stormpathClient" />
        <property name="applicationRestUrl" value="https://api.stormpath.com/v1/applications/5CfeVqkohRjuM2XhNjSMuH"/>
    </bean>

    <security:http auto-config='true' use-expressions="true">
        <security:intercept-url pattern="A_SECURED_RESOURCE" access="hasRole('https://api.stormpath.com/v1/groups/56Kw4ncN5ufT69zoObJ3EX')"/>
        <!--<security:logout logout-url="/logout" logout-success-url="/logoutSuccess.jsp"/>-->
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider ref='authenticationProvider'/>
    </security:authentication-manager>

    <bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler" >
        <property name="defaultTargetUrl" value="/MainMenu" /> <!-- which is the default value -->
    </bean>
    
    <bean id="failureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" >
        <property name="defaultFailureUrl" value="/pages/login/login?action=errorLogin" />
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.authentication.LockedException">/pages/login/login?action=errorLocked</prop>
            </props>
        </property>
    </bean>

     
     <bean id="sessionRegistry" class="org.akaza.openclinica.web.filter.OpenClinicaSessionRegistryImpl">
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="dataSource" ref="dataSource"/>
         <property name="crfLocker" ref="crfLocker" />
     </bean>
    

    
    <bean id="openClinicaLogoutHandler" class="org.akaza.openclinica.web.filter.OpenClinicaSecurityContextLogoutHandler">
        <property name="auditUserLoginDao" ref="auditUserLoginDao"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
        <property name="accessTokenValiditySeconds" value="300000"/>
        <property name="clientDetailsService" ref="clientDetails"/>
    </bean>

    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>


    <bean id="tokenStoreJdbc" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>

    <bean id="tokenServicesJdbc" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStoreJdbc"/>
        <property name="supportRefreshToken" value="true"/>
    </bean>

    <!--<oauth:provider client-details-service-ref="clientDetails" token-services-ref="tokenServices" >
        <oauth:verification-code user-approval-page="/oauth/confirm_access"/>
    </oauth:provider>
-->
    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="test" authorized-grant-types="password,authorization_code,refresh-token"/>
        <oauth:client client-id="my-trusted-client" authorized-grant-types="password,authorization_code,refresh_token"/>
        <oauth:client client-id="my-less-trusted-client" authorized-grant-types="authorization_code"/>
        <oauth:client client-id="designer" authorized-grant-types="authorization_code,refresh_token"/>
    </oauth:client-details-service>

    	<bean id="metadataCollectorResource" class="org.akaza.openclinica.web.restful.MetadataCollectorResource" name="metadataCollectorResource">
<property name="dataSource" ref="dataSource"></property>
<property name="ruleSetRuleDao" ref="ruleSetRuleDao"/>
<property name="coreResources" ref="coreResources"/>
<property name = "studyDaoHib" ref = "studyDaoDomain"/>
</bean>
<bean id="odmMetadataRestResource" class="org.akaza.openclinica.web.restful.ODMMetadataRestResource">
	<property name="metadataCollectorResource" ref="metadataCollectorResource"/>
</bean>
<bean id="clinicalDataCollectorResource" class="org.akaza.openclinica.web.restful.ClinicalDataCollectorResource">
<property name = "generateClinicalDataService" ref = "generateClinicalDataService"></property>
</bean>
<bean id="odmClinicalDataRestResource" class="org.akaza.openclinica.web.restful.ODMClinicaDataResource">
	<property name="clinicalDataCollectorResource" ref="clinicalDataCollectorResource"/>
	<property name="metadataCollectorResource" ref="metadataCollectorResource"/>
    <property name="dataSource" ref="dataSource"/>
</bean>
<bean id="openRosaServices" class="org.akaza.openclinica.web.pform.OpenRosaServices">
    <property name="dataSource" ref="dataSource"></property>
    <property name="coreResources" ref="coreResources"/>
    <property name="ruleActionPropertyDao" ref="ruleActionPropertyDao"/>
    <property name="openRosaSubmissionController" ref="openRosaSubmissionController" />
</bean>

<bean id="openRosaSubmissionController" class="org.akaza.openclinica.controller.openrosa.OpenRosaSubmissionController" autowire="byName">
</bean>


</beans>