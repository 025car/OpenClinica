##############################################################
# extract properties file - draft 1, tom hickerson aug 26 2010
# our main goals:
# -- define xsl file locations and their descriptions
# -- define pre-/post-processing actions
# preprocessing options: currently not defined
# postprocessing options: -- SQL push to a DB
# -- generate a set of PDFs 
# -- generate a set of SAS files
##############################################################

##############################################################
# 1. XSL Files and all Descriptions
#
# Ideally we should be able to support any number of stylesheets
# and descriptions; we can either declare how many stylesheets
# right away, i.e. in its own parameter, or put in enough
# intelligence to parse the number of stylesheets by itself.
# The default location for these files is under /properties.
# (Could also be under src/main/resources?)
# Other locations can be defined as sub-directories.
# If the text is internationalized, it is prefacted with an & (and)
# symbol, and the text can be found in the i18n properties files.
##############################################################

xsl.file.1=ODMStylesheet.xsl
xsl.file.description.1=Default Stylesheet for SQL Datamart Generation
xsl.link.text.1=Click here
xsl.helptext.1=Our first stylesheet, which is in SQL format for pushing information out to the datamart.
xsl.location.1=xsl
xsl.exportname.1=sql_export_$date
xsl.allowed.1 = ra,director,monitor
xsl.post.1=sql

xsl.file.2=xsl\\ODMTabDelimited.xsl
xsl.file.description.2= Tab-delimited
xsl.link.text.2=Click here for Tab-delimited output
xsl.helptext.2=The tab-delimited output, which can be used in Excel spreadsheets.
xsl.location.2=C:\\work\\openclinica.data
xsl.exportname.2=tab_super_tab_$type
xsl.allowed.2 = all
xsl.post.2=pdf

xsl.file.3=xsl\\ODMHTML.xsl
xsl.file.description.3= &html_output
xsl.link.text.3= &html_output
xsl.helptext.3= &html_helptext
xsl.location.3=S:\\shared\\oc\\exports
xsl.exportname.3=file_$datetime
xsl.allowed.3 = coordinator,ra,investigator
xsl.post.3=sas

##############################################################
# 2. XSL file export locations
#
# This can be in the format of a relative directory or a full
# directory. (Could also be mapped drives, afaik)
##############################################################

##############################################################
# 3. XSL file name templates
#
# File names for the export files.  This can be appended with 
# a date ($date), date-time ($datetime), or filetype ($type).
# (This last one is important for files with multiple post
# processing actions.)
# Suffixes will be generated automatically (.sql, .pdf, etc)
##############################################################

##############################################################
# 4. Allowed Use
# 
# Role names of the users who can access the different XSL export
# functions.  Besides role names, we can also use the word 'all'
# to allow all user roles.
##############################################################

##############################################################
# 5. Pre- and Postprocessing Options
#
# Currently there are three codes, linked to the files listed above:
# sql = push to a db
# pdf = pdf generation
# sas = sas file generation
# Each XSL file can have one or more postprocessing options.
# An alternative could be a batch or shell file which would run
# after the dataset is extracted. (Ex: xsl.post.3=xsl\\runme.bat)
##############################################################

##############################################################
# 6. (Optional) Database configurations 
#
# Enter these properties if you require the datamart to be placed 
# in a different database, not in the OpenClinica database.
# Leaving the properties blank implies that the datamart will
# be placed in the OpenClinica.
# 
#
##############################################################

xsl.username.1=clinica
xsl.password.1=clinica
xsl.url.1=jdbc:postgresql://localhost:5432/OpenClinica4-SNAPSHOT
xsl.dataBase.1=postgres
