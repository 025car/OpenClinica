##############################################################
# extract properties file - draft 1, tom hickerson aug 26 2010
# our main goals:
# -- define xsl file locations and their descriptions
# -- define pre-/post-processing actions
# preprocessing options: currently not defined
# postprocessing options: -- SQL push to a DB
# -- generate a set of PDFs 
# -- generate a set of SAS files
##############################################################

##############################################################
# 1. XSL Files and all Descriptions
#
# Ideally we should be able to support any number of stylesheets
# and descriptions; we can either declare how many stylesheets
# right away, i.e. in its own parameter, or put in enough
# intelligence to parse the number of stylesheets by itself.
# ***NOTE*** The default location for these files is under 
# $filePath/xslt.  If the file is not found there, the job will 
# not work.
# If the text is internationalized, it is prefacted with an & (and)
# symbol, and the text can be found in the notes.properties i18n files.
##############################################################

xsl.file.1=ODMReportStylesheet.xsl
xsl.file.description.1=Default Stylesheet for SQL Datamart Generation
xsl.link.text.1=Click here
xsl.helptext.1=Our first stylesheet, which is in SQL format for pushing information out to the datamart.
xsl.location.1=xsl
xsl.exportname.1=sql_export_$date.sql
xsl.allowed.1 = ra,director,monitor
xsl.post.1=sql
# optional tag below, database properties
xsl.post.1.sql=db1

xsl.file.2=ODMtoCSV.xsl
xsl.file.description.2= Tab-delimited CSV
xsl.link.text.2=Click here
xsl.helptext.2=The tab-delimited output, which can be used in Excel spreadsheets.
xsl.location.2=xsl2
xsl.exportname.2=tab_$datetime.csv
xsl.allowed.2 = all

xsl.file.3=odm_to_html.xsl
xsl.file.description.3= &html_output
xsl.link.text.3= &html_output_link
xsl.helptext.3= &html_helptext
xsl.location.3=xsl3
xsl.exportname.3=file_$date.html
xsl.allowed.3 = coordinator,ra,investigator

xsl.file.4=odm_to_xslfo.xsl
xsl.file.description.4= &pdf_output
xsl.link.text.4= &pdf_output_link
xsl.helptext.4= &pdf_helptext
xsl.location.4=xslpdf
xsl.exportname.4=file_$date.fo
xsl.allowed.4 = coordinator,ra,investigator
xsl.post.4=pdf

##############################################################
# 2. XSL file export locations
#
# This can be in the format of a relative directory.
##############################################################

##############################################################
# 3. XSL file name templates
#
# File names for the export files.  This can be appended with 
# a date ($date) or date-time ($datetime).
# (This last one is important for files with multiple post
# processing actions.)
# Suffixes ARE NOT generated automatically (.sql, .pdf, etc)
##############################################################

##############################################################
# 4. Allowed Use - TO BE IMPLEMENTED
# 
# Role names of the users who can access the different XSL export
# functions.  Besides role names, we can also use the word 'all'
# to allow all user roles.
##############################################################

##############################################################
# 5. Pre- and Postprocessing Options
#
# Currently there are three codes, linked to the files listed above:
# sql = push to a db
# pdf = pdf generation
# sas = sas file generation
# Each XSL file can have one or more postprocessing options.
# A future alternative could be a batch or shell file which would run
# after the dataset is extracted. (Ex: xsl.post.3=xsl\\runme.bat)
##############################################################

##############################################################
# 6. (Optional) Database configurations 
#
# Enter these properties if you require the datamart to be placed 
# in a different database, not in the OpenClinica database.
# Leaving the properties blank implies that the datamart will
# be placed in the OpenClinica.
# 
#
##############################################################

db1.username=clinica
db1.password=clinica
db1.url=jdbc:postgresql://localhost:5432/OpenClinica4-SNAPSHOT
db1.dataBase=postgres
