<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

     <changeSet author="drodrigues" id="2012-03-14-13350-1" dbms="postgresql">
        <comment>Drops views 'dn_age_days', 'view_dn_dates' and the views that depend on them.</comment>
        <sql splitStatements="false">
<![CDATA[
drop view if exists "view_discrepancy_note";
drop view if exists "view_dn_item_data";
drop view if exists "view_dn_event_crf";
drop view if exists "view_dn_study_event";
drop view if exists "view_dn_study_subject";
drop view if exists "view_dn_subject";
drop view if exists "view_dn_dates";
drop view if exists "dn_age_days";
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-2" dbms="postgresql">
        <comment>Create view 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view "view_dn_stats" as
select dn.discrepancy_note_id, 
current_date - (
    select dn2.date_created
    from discrepancy_note dn2
    where dn2.parent_dn_id = dn.discrepancy_note_id
    and dn2.discrepancy_note_id = (
        select max(discrepancy_note_id) 
        from discrepancy_note dn3
        where dn3.parent_dn_id = dn.discrepancy_note_id 
        AND dn.resolution_status_id != 4 AND dn.resolution_status_id != 5   
    )
) as "days",(
    select max(dn2.discrepancy_note_id)
    from discrepancy_note dn2
    where dn2.parent_dn_id = dn.discrepancy_note_id
) as "age", j.total_notes, j.date_created, j.date_updated
from discrepancy_note dn, (
    select dn2.parent_dn_id, count(dn2.discrepancy_note_id) as "total_notes", 
    min(dn2.date_created) as "date_created", max(dn2.date_created) as "date_updated" 
    from discrepancy_note dn2 
    group by dn2.parent_dn_id 
    having (dn2.parent_dn_id is not null and dn2.parent_dn_id <> 0)
) j
where dn.parent_dn_id is null
and dn.discrepancy_note_id = j.parent_dn_id;
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-3" dbms="postgresql">
        <comment>Create view 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view "view_dn_stats" as
select dn.discrepancy_note_id, 
current_date - (
    select dn2.date_created
    from discrepancy_note dn2
    where dn2.parent_dn_id = dn.discrepancy_note_id
    and dn2.discrepancy_note_id = (
        select max(discrepancy_note_id) 
        from discrepancy_note dn3
        where dn3.parent_dn_id = dn.discrepancy_note_id 
        AND dn.resolution_status_id != 4 AND dn.resolution_status_id != 5   
    )
) as "days",(
    select max(dn2.discrepancy_note_id)
    from discrepancy_note dn2
    where dn2.parent_dn_id = dn.discrepancy_note_id
) as "age", j.total_notes, j.date_created, j.date_updated
from discrepancy_note dn, (
    select dn2.parent_dn_id, count(dn2.discrepancy_note_id) as "total_notes", 
    min(dn2.date_created) as "date_created", max(dn2.date_created) as "date_updated" 
    from discrepancy_note dn2 
    group by dn2.parent_dn_id 
    having (dn2.parent_dn_id is not null and dn2.parent_dn_id <> 0)
) j
where dn.parent_dn_id is null
and dn.discrepancy_note_id = j.parent_dn_id;
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-4" dbms="postgresql">
        <comment>Create view 'view_dn_item_data' refering to 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view view_dn_item_data as select 
s.study_id, 
s.parent_study_id, 
vhstudy.hide_crf as "study_hide_crf",
vhsite.hide_crf as "site_hide_crf",
dn.discrepancy_note_id, 
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id,
dn.resolution_status_id, 
s.unique_identifier as "site_id", 
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
sed.name as "event_name", 
se.date_start, 
c.name as "crf_name", 
ec.status_id, 
i.name as "entity_name", 
id.value, 
dn.entity_type, 
dn.description, 
dn.detailed_notes, 
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from discrepancy_note dn left outer join user_account ua on (
    dn.assigned_user_id = ua.user_id
), user_account ua2, dn_item_data_map map, study_subject ss, study s, item_data id, item i, event_crf ec, 
study_event se, study_event_definition sed, crf_version cv, crf c, view_hidden_event_definition_crf vhstudy, 
view_hidden_event_definition_crf vhsite, view_dn_stats ds
where
dn.owner_id = ua2.user_id
and dn.discrepancy_note_id = map.discrepancy_note_id
and map.study_subject_id = ss.study_subject_id
and map.item_data_id = id.item_data_id
and dn.discrepancy_note_id = ds.discrepancy_note_id
and id.item_id = i.item_id
and id.event_crf_id = ec.event_crf_id
and ec.study_event_id = se.study_event_id
and se.study_event_definition_id = sed.study_event_definition_id
and ec.crf_version_id = cv.crf_version_id
and cv.crf_id = c.crf_id
and ss.study_id = s.study_id
and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0))
and vhstudy.type = 'study'
and vhstudy.study_event_id = se.study_event_id
and vhstudy.crf_version_id = cv.crf_version_id 
and vhsite.type = 'site'
and vhsite.study_event_id = se.study_event_id
and vhsite.crf_version_id = cv.crf_version_id;
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-5" dbms="postgresql">
        <comment>Create view 'view_dn_event_crf' refering to 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view view_dn_event_crf as 
select 
s.study_id, 
s.parent_study_id, 
vhstudy.hide_crf as "study_hide_crf", 
vhsite.hide_crf as "site_hide_crf",
dn.discrepancy_note_id, 
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id,
dn.resolution_status_id, 
s.unique_identifier as "site_id", 
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
sed.name as "event_name", 
se.date_start, 
c.name as "crf_name", 
ec.status_id, 
TRIM('') as "entity_name", 
TRIM('') as "value", 
dn.entity_type, 
dn.description, 
dn.detailed_notes, 
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
discrepancy_note dn left outer join user_account ua on (
    dn.assigned_user_id = ua.user_id
), user_account ua2, dn_event_crf_map map, event_crf ec, study_event se, study_subject ss, study s, study_event_definition sed, crf_version cv, crf c, view_hidden_event_definition_crf vhstudy, view_hidden_event_definition_crf vhsite, view_dn_stats ds
where
dn.discrepancy_note_id = ua2.user_id
and map.discrepancy_note_id = dn.discrepancy_note_id
and map.event_crf_id = ec.event_crf_id
and ec.study_event_id = se.study_event_id
and ec.study_subject_id = ss.study_subject_id
and ss.study_id = s.study_id
and dn.discrepancy_note_id = ds.discrepancy_note_id
and se.study_event_definition_id = sed.study_event_definition_id
and ec.crf_version_id = cv.crf_version_id
and cv.crf_id = c.crf_id
and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0))
and vhstudy.type = 'study'
and vhstudy.study_event_id = se.study_event_id
and vhstudy.crf_version_id = cv.crf_version_id 
and vhsite.type = 'site'
and vhsite.study_event_id = se.study_event_id
and vhsite.crf_version_id = cv.crf_version_id;
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-6" dbms="postgresql">
        <comment>Create view 'view_dn_study_event' refering to 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view view_dn_study_event as 
select 
s.study_id, 
s.parent_study_id, 
false as "study_hide_crf", 
false as "site_hide_crf",
dn.discrepancy_note_id, 
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id, 
dn.resolution_status_id, 
s.unique_identifier as "site_id",
ds.date_created,
ds.date_updated,
ds.days, 
ds.age,
sed.name as "event_name", 
se.date_start,
TRIM('') as "crf_name",
0 as "status_id",
TRIM('') as "entity_name", 
TRIM('') as "value", 
dn.entity_type,
dn.description,
dn.detailed_notes,
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
discrepancy_note dn left outer join user_account ua on (
    dn.assigned_user_id = ua.user_id
), user_account ua2, dn_study_event_map map, study_event se, study_subject ss, study s, study_event_definition sed, view_dn_stats ds
where
dn.owner_id = ua2.user_id
and map.discrepancy_note_id = dn.discrepancy_note_id
and map.study_event_id = se.study_event_id
and se.study_subject_id = ss.study_subject_id
and ss.study_id = s.study_id
and dn.discrepancy_note_id = ds.discrepancy_note_id
and se.study_event_definition_id = sed.study_event_definition_id
and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0));
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-7" dbms="postgresql">
        <comment>Create view 'view_dn_study_subject' refering to 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view view_dn_study_subject as 
select 
s.study_id, 
s.parent_study_id, 
false as "study_hide_crf", 
false as "site_hide_crf",
dn.discrepancy_note_id, 
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id, 
dn.resolution_status_id, 
s.unique_identifier as "site_id",
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
TRIM('') as "event_name", 
null::date as "date_start",
TRIM('') as "crf_name",
0 as "status_id", 
TRIM('') as "entity_name", 
TRIM('') as "value", 
dn.entity_type,
dn.description, 
dn.detailed_notes,
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
discrepancy_note dn left outer join user_account ua on (
    dn.assigned_user_id = ua.user_id
), user_account ua2, dn_study_subject_map map, study_subject ss, study s, view_dn_stats ds
where
dn.owner_id = ua2.user_id
and map.discrepancy_note_id = dn.discrepancy_note_id
and map.study_subject_id = ss.study_subject_id
and ss.study_id = s.study_id
and dn.discrepancy_note_id = ds.discrepancy_note_id
and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0));
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-8" dbms="postgresql">
        <comment>Create view 'view_dn_subject' refering to 'view_dn_stats'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view view_dn_subject as 
select 
s.study_id, 
s.parent_study_id, 
false as "study_hide_crf", 
false as "site_hide_crf",
dn.discrepancy_note_id,
ss.label, 
ss.status_id as "ss_status_id",
dn.discrepancy_note_type_id, 
dn.resolution_status_id, 
s.unique_identifier as "site_id",
ds.date_created,
ds.date_updated,
ds.days, 
ds.age, 
TRIM('') as "event_name", 
null::date as "date_start",
TRIM('') as "crf_name", 
0 as "status_id", 
TRIM('') as "entity_name", 
TRIM('') as "value", 
dn.entity_type,
dn.description,
dn.detailed_notes,
ds.total_notes,
ua.first_name, 
ua.last_name, 
ua.user_name,
ua2.first_name as "owner_first_name", 
ua2.last_name as "owner_last_name", 
ua2.user_name as "owner_user_name"
from
discrepancy_note dn left outer join user_account ua on (
    dn.assigned_user_id = ua.user_id
), user_account ua2, dn_subject_map map, study_subject ss, study s, subject su, view_dn_stats ds
where
dn.owner_id = ua2.user_id
and map.discrepancy_note_id = dn.discrepancy_note_id
and map.subject_id = su.subject_id
and ss.subject_id = su.subject_id
and ss.study_id = s.study_id
and dn.discrepancy_note_id = ds.discrepancy_note_id
and ((dn.parent_dn_id is null) or (dn.parent_dn_id = 0));
]]>
        </sql>
    </changeSet>

     <changeSet author="drodrigues" id="2012-03-14-13350-9" dbms="postgresql">
        <comment>Recreating 'view_discrepancy_note'.</comment>
        <sql splitStatements="false">
<![CDATA[
create or replace view view_discrepancy_note as 
select * from view_dn_subject
union
select * from view_dn_study_subject
union
select * from view_dn_study_event
union
select * from view_dn_event_crf
union
select * from view_dn_item_data;
]]>
        </sql>
    </changeSet>

</databaseChangeLog>     