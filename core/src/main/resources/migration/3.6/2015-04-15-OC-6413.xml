<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">
        <changeSet author="jkeremian" id="2015-04-15-OC6413-2">
	<insert tableName="audit_log_event_type">
	    <column name="audit_log_event_type_id" valueNumeric="40"/>
	    <column name="name" value="event_crf_deleted"/>
	</insert>
    </changeSet>

        <changeSet author="jkeremian" id="2015-04-15-OC6413-3">
	<insert tableName="audit_log_event_type">
	    <column name="audit_log_event_type_id" valueNumeric="41"/>
	    <column name="name" value="event_crf_started"/>
	</insert>
    </changeSet>
    
    <changeSet author="jkeremian" id="2015-04-15-OC6413-5">
        <preConditions onFail="MARK_RAN"><dbms type="postgresql" /></preConditions>
        <comment>create event_crf_initial_trigger()</comment> 
        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION event_crf_initial_trigger() RETURNS "trigger"
            AS 'DECLARE
			pk INTEGER;
			entity_name_value TEXT;
			
        BEGIN
            IF (TG_OP = ''INSERT'') THEN
				SELECT INTO pk NEXTVAL(''audit_log_event_audit_id_seq'');
				SELECT INTO entity_name_value ''Status'';
		                INSERT INTO audit_log_event(audit_id, audit_log_event_type_id, audit_date, user_id, audit_table, entity_id, entity_name, old_value, new_value, event_crf_id )
		                    VALUES (pk, ''41'', now(), NEW.owner_id, ''event_crf'', NEW.event_crf_id, entity_name_value,''2'', NEW.status_id, NEW.event_crf_id );
				RETURN NULL;
            END IF;
        RETURN NULL;
        END;
        '
            LANGUAGE plpgsql;
         </sql>
    </changeSet> 
    
            <changeSet author="jkeremian" id="2015-04-15-OC6413-6">

        <sql splitStatements="false">
            CREATE TRIGGER event_crf_initial
            AFTER INSERT ON event_crf
            FOR EACH ROW
            EXECUTE PROCEDURE event_crf_initial_trigger();
        </sql>
    </changeSet>
    
    
    
</databaseChangeLog>